.. highlight:: rest.. _sec-parameters:Parameter Specifications========================Creating a Parameter file-------------------------This sefction provides detailed documentation on the structure and formatting of parameter files (``*.param``). Below are the basic guidelines:* Most parameters come with predefined values (indicated in ``[]``). If a parameter is omitted from the parameter file, its default value will be assumed.* The parameters can be listed in any order; there is no strict arrangement required.* Some parameters are conditional â€” if the required conditions are not met, those parameters will be ignored.* Any line beginning with ``#`` is treated as a comment and will be automatically ignored.* Parameters should be specified using the following format:.. code-block:: console    parameter1    value1    parameter2    value2    ...           .. _ssec-basic-params:    Basic parameters----------------Administrative parameters^^^^^^^^^^^^^^^^^^^^^^^^^These parameters define the fundamental settings for running TRINITY:* ``model_name [def_name]``: Specifies the model name, which serves as the prefix for all output filenames. Only alphanumeric characters and underscores (_) are allowed.* ``out_dir [def_dir]``: Defines the output directory where all generated files will be stored. This should be an absolute path. By default, the output directory is the root directory where TRINITY is executed.* ``verbose [2]``: Controls the verbosity level of terminal output: ``1`` - Minimal output, ``2`` - Basic output (default), and ``3`` - Detailed output (all messages)* ``output_format [json]``: Specifies the output format. Currently, only JSON format is supported.Physical parameters^^^^^^^^^^^^^^^^^^^These are the core parameters that TRINITY relies on.* ``log_mCloud [9.0]`` (:math:`M_\odot`):  The logarithmic mass of the molecular cloud.* ``mCloud_beforeSF [1]``: Defines whether log_mCloud represents mass before or after (default - ``1``) star formation:* ``sfe [0.01]``: Star formation effeciency (``0 < sfe < 1``). Determines the fraction of cloud mass converted into the initial star cluster.* ``nCore [1e4]`` (cm\ :math:`^{-3}`): Cloud core number density.* ``metallicity [1]`` (:math:`Z_\odot`): Cloud metallicity. Supported values: 1 :math:`Z_\odot` and 0.15 :math:`Z_\odot`.Stochastic Sampling^^^^^^^^^^^^^^^^^^^ * ``stochastic_sampling [0]``: Controls whether stochastic sampling of the Initial Mass Function (IMF) is included when creating the initial cluster:    * ``0`` - Disables stochastic sampling, applying scaling relations instead (IMF fully sampled).    * ``1`` - Enables stochastic sampling. The number of trials must then be specified using ``n_trials``.* ``n_trials``: Defines the number of iterations (SLUG clusters) to generate. The recommended number of trials follows the relation:        .. math:: {\rm n\_trials} \sim \lceil 10^6/{\rm mCluster} \rceil \sim \lceil 10^6/({\rm mCloud} \times {\rm sfe}) \rceil            * For high-mass clusters with fully sampled IMFs, fewer iterations are required.    * For low-mass clusters where stochastic effects are significant, more iterations are recommended to better capture output distributions (e.g., ionizing luminosity).Parameters for the Density Profile of the Cloud-----------------------------------------------This section defines the density profile, :math:`\rho(r)`, of the molecular cloud.* ``dens_profile [pL_prof]``: Specifies how the cloud density scales with radius. Available options:1. Bonnor-Ebert Sphere (Future Implementation)^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^* ``bE_prof``: Implements a Bonnor-Ebert sphere profile (see `Ebert 1955 <https://ui.adsabs.harvard.edu/abs/1955ZA.....37..217E/abstract>`_; `Bonnor 1956 <https://ui.adsabs.harvard.edu/abs/1956MNRAS.116..351B/abstract>`_).* If selected, the following parameter must be defined:    * ``dens_g_bE [14.1]``: Specifies :math:`g_{\rm BE} = \frac{\rho_{\rm centre}}{\rho_{\rm edge}}`. Clouds exceeding this value become gravitationally unstable, with the corresponding mass representing the critical Bonnor-Ebert mass (`Stahler and Palla 2004 <https://ui.adsabs.harvard.edu/abs/2004fost.book.....S/abstract>`_). 2. Power-Law Profile^^^^^^^^^^^^^^^^^^^^ * ``pL_prof``: Defines a power-law density profile.     * ``dens_a_pL [0]``: Specifies the power-law coefficient, :math:`\alpha`, where :math:`-2\leq\alpha<0`. Given a core radius :math:`r_0`, core density :math:`\rho_0`, and ISM density :math:`\rho_{\rm ambISM}`, then the cloud density profile is defined as:.. math:: \rho_{\rm cloud}(r) = \left\{\begin{array}{lll} \rho_0 , & r \leq r_0 \\ \rho_0 \times (r / r_0)^\alpha, & r_0 < r \leq r_{\rm cloud} \\ \rho_{\rm ambISM}, & r > r_{\rm cloud} \end{array} \right.    * Special cases:            * ``dens_a_pL = 0`` results in a homogeneous cloud.                * ``dens_a_pL = 2`` produces an isothermal sphere.* ``dens_navg_pL [1e4]`` (cm\ :math:`^{-3}`): Defines the average number density of the cloud when using a power-law profile.Parameters for Starburst99 operations (if used)-----------------------------------------------This section specifies which Starburst99 (SB99) file from your local directory should be used for the current TRINITY run.For more details, refer to the official `Starburst99 documentation <https://www.stsci.edu/science/starburst99/docs/run.html>`_. Note: This does not automatically generate a Starburst99 file!* ``SB99_mass [1e6]`` (:math:`M_\odot`): What is the default star cluster mass in SB99? This will be used for scaling relation in outputs.* ``SB99_rotation [1]``: Are we consdering rotating or non-rotating stars in the stellar track? Rotation extends stellar lifetime due to mixing and being nitrogen-rich, plus it mixes fresh hydrogen into the core, prolonging fusion.* ``SB99_BHCUT [120]`` (:math:`M_\odot`): What is the black hole cutoff mass (unit: Msol)? Stars with ZAMS masses below this parameter form supernovae. For instance, ``SB99_BHCUT = 40`` results in SNe only from the mass range 40 to 8 :math:`M_\odot`. * ``f_Mcold_wind [0]``, ``f_Mcold_SN [0]``: Add fraction of mass injected into the cloud due to sweeping of cold material from protostars and disks inside star clusters? This will affect in particular the total mass loss rate of cluster, and consequently the escape velocity (e.g., see `Stevens and Hartwell 2003 <https://ui.adsabs.harvard.edu/abs/2003MNRAS.339..280S/abstract>`_).* ``thermcoeff_wind [1]``, ``thermcoeff_SN [0]``: The thermalisation efficiency :math:`\eta` for colliding winds and supernova ejecta, i.e., the fraction of kinetic energy of stars and supernova in the cluster that is thermalised. See `Stevens and Hartwell 2003 <https://ui.adsabs.harvard.edu/abs/2003MNRAS.339..280S/abstract>`_ or `Kavanagh 2020 <https://ui.adsabs.harvard.edu/abs/2020Ap%26SS.365....6K/abstract>`_ for a review.* ``v_SN [1e4]`` (kms\ :math:`^{-1}`): What is the velocity of supernova ejecta? Parameters for setting library paths------------------------------------This section sets the path to libraries. Please provide absolute paths.* ``path_cooling_CIE [3]``: Path to cooling curve FILE would you like to use for collisional ionization equilibrium (CIE)? This is the cooling curve to use for :math:`T > 10^{5.5}` K. Accept either available numbers or string such as: ``path/to/warpfield/lib/cooling_tables/opiate/file``.        * 1: CLOUDY cooling curve for HII region, solar metallicity.    * 2: CLOUDY cooling curve for HII region, solar metallicity. Includes the evaporative (sublimation) cooling of icy interstellar grains (occurs e.g., when heated by cosmic-ray particle)    * 3: Gnat and Ferland 2012 (slightly interpolated for values), solar metallicity.    * 4: Sutherland and Dopita 1993, for 0.15 solar metallicity.    * ``path_cooling_nonCIE [def_dir]``: Path to cooling curve FOLDER would you like to use for non-CIE ( :math:`T < 10^{5.5}` K). Default: ``path/to/warpfield/lib/cooling_tables/CIE/current/``.* ``path_sps [def_dir]``: PPath to starburst99 files? Default: ``path/to/warpfield/lib/sps/starburst99/``.        Other parameters----------------These parameters allow users to fine-tune specific values; however, they primarily represent standard physical constants and are rarely modified. Unless necessary, it is recommended to retain their default settings.Fundamental Constants^^^^^^^^^^^^^^^^^^^^^* ``mu_n [2.1287915392418182e-24]`` (:math:`g`): Mean mass per nucleus, assuming a standard composition of one helium atom per ten hydrogen atoms. By default, :math:`\mu_{\rm n} = (14/11)m_{\rm H}`.* ``mu_p [1.0181176926808696e-24]`` (:math:`g`): Mean mass per particle, based on the same standard composition. By default, :math:`\mu_{\rm p} = (14/23)m_{\rm H}`.* ``nISM [0.1]`` (cm\ :math:`^{-3}`): Number density of the ambient interstellar medium (ISM).  Temperature Constants^^^^^^^^^^^^^^^^^^^^^* ``t_ion [1e4]`` (:math:`T`): Temperature of the ionised region.* ``t_neu [1e2]`` (:math:`T`): Temperature of the neutral region.Dust and Metallicity Parameters^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^* ``sigma0 [1.5e-21]`` (cm\ :math:`^2`): Dust cross-section at solar metallicity. Thus for other metallicities the dust cross section is scaled as :math:`\sigma_d = \sigma_0 * (Z/Z_\odot)`.* ``z_nodust [0.05]`` (:math:`Z_\odot`): Metallicity below which there is effectively no dust, i.e., :math:`\sigma_d = 0` (unit: :math:`Z_\odot`). Thermodynamic and Magnetic Parameters^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^* ``gamma_adia [1.6666666666666667]``: The adiabatic index (:math:`\gamma_{\rm adia} = 5/3`).* ``gamma_mag [1.3333333333333333]``: The effective magnetic adiabatic index (:math:`\gamma_{\rm mag} = 4/3`).     * Setting to ``0`` implies a constant magnetic field strength throughout the model.    * Setting ``4/3`` assumes conservation of magnetic flux, as expected in the absence of dynamo action or magnetic reconnection (spherical configuration).    * See `Henney et al 2005 <https://ui.adsabs.harvard.edu/abs/2005ApJ...621..328H/abstract>`_, Appendix C.Recombination and Opacity Parameters^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^* ``alpha_B [2.59e-13]`` (cm\ :math:`^{3}`/s): Case B recombination coefficient. See `Osterbrock and Ferland 2006 <https://ui.adsabs.harvard.edu/abs/2006agna.book.....O/abstract>`_.     * ``kappa_IR [4]`` (cm\ :math:`^{2}`/g): The Rosseland mean dust opacity :math:`\kappa_{\rm IR}`. This parameter is assumed to be constant for simplicity, without temperature dependence. It relates to the calculation of :math:`\tau_{\rm IR}`, the infrared optical depth of the shell: .. math:: \tau_{\rm IR} = \kappa_{\rm IR} \int \mu_n n_{\rm sh} {\rm d}r